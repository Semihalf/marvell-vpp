From 18bcae60b89d1a561afa9b96518b86aee740c151 Mon Sep 17 00:00:00 2001
From: Zyta Szpak <zr@semihalf.com>
Date: Thu, 22 Feb 2018 13:47:54 +0100
Subject: [PATCH 17/74] mrvlna: add dev_start/stop

---
 drivers/net/mrvlna/mrvlna_ethdev.c | 73 ++++++++++++++++++++++++++++++++++++--
 1 file changed, 71 insertions(+), 2 deletions(-)

diff --git a/drivers/net/mrvlna/mrvlna_ethdev.c b/drivers/net/mrvlna/mrvlna_ethdev.c
index fa89a31..36a3d92 100644
--- a/drivers/net/mrvlna/mrvlna_ethdev.c
+++ b/drivers/net/mrvlna/mrvlna_ethdev.c
@@ -480,10 +480,79 @@ mrvlna_tx_queue_release(void *txq)
 	rte_free(q);
 }
 
+/**
+ * DPDK callback to start the device.
+ *
+ * @param dev
+ *   Pointer to Ethernet device structure.
+ *
+ * @return
+ *   0 on success, negative errno value on failure.
+ */
+static int
+mrvlna_dev_start(struct rte_eth_dev *dev)
+{
+	struct neta_priv *priv = dev->data->dev_private;
+
+	char match[MRVLNA_MATCH_LEN];
+	int ret = 0, i;
+
+	snprintf(match, sizeof(match), "neta-%d:%d",
+		 priv->pp_id, priv->ppio_id);
+	priv->ppio_params.match = match;
+
+	ret = neta_ppio_init(&priv->ppio_params, &priv->ppio);
+	if (ret) {
+		RTE_LOG(ERR, PMD, "Failed to init ppio\n");
+		return ret;
+	}
+
+/* start tx queues */
+	for (i = 0; i < dev->data->nb_tx_queues; i++) {
+		struct neta_txq *txq = dev->data->tx_queues[i];
+
+		dev->data->tx_queue_state[i] = RTE_ETH_QUEUE_STATE_STARTED;
+
+		if (!txq->tx_deferred_start)
+			continue;
+
+		/*
+		 * All txqs are started by default. Stop them
+		 * so that tx_deferred_start works as expected.
+		 */
+//		ret = mrvlna_tx_queue_stop(dev, i);
+//		if (ret)
+//			goto out;
+	}
+
+	return 0;
+
+//out:
+//	RTE_LOG(ERR, PMD, "Failed to start device\n");
+//	neta_ppio_deinit(priv->ppio);
+//	return ret;
+}
+
+/**
+ * DPDK callback to stop the device.
+ *
+ * @param dev
+ *   Pointer to Ethernet device structure.
+ */
+static void
+mrvlna_dev_stop(struct rte_eth_dev *dev)
+{
+	struct neta_priv *priv = dev->data->dev_private;
+
+	neta_ppio_deinit(priv->ppio);
+
+	priv = NULL;
+}
+
 static const struct eth_dev_ops mrvlna_ops = {
 	.dev_configure = mrvlna_dev_configure,
-//	.dev_start = ,
-//	.dev_stop = ,
+	.dev_start = mrvlna_dev_start,
+	.dev_stop = mrvlna_dev_stop,
 //	.dev_set_link_up = ,
 //	.dev_set_link_down = ,
 //	.dev_close = ,
-- 
2.7.4

